name: Build, Push to GHCR & Deploy to Kubernetes

on:
  push:
    tags:
      - "*"  

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  

      - name: Extract tag version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set lowercase username
        run: echo "USERNAME=$(echo $GITHUB_ACTOR | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build Docker image (no cache)
        run: docker build --no-cache -t ghcr.io/${{ env.USERNAME }}/nginx:${{ env.VERSION }} .

      - name: Push Docker image to GHCR
        run: docker push ghcr.io/${{ env.USERNAME }}/nginx:${{ env.VERSION }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract tag version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
    
      - name: Start Minikube
        uses: medyagh/setup-minikube@latest
      
      - name: Generate deployment YAML
        run: |
          envsubst < nginx.deployment.yml > k8s-deployment.yml
          
      - name: Apply Kubernetes Deployment
        run: |
          kubectl cluster-info
          kubectl apply -f k8s-deployment.yml
          kubectl get pods -A

      - name: Test application inside GitHub Actions
        run: |
          kubectl port-forward svc/nginx-service 8080:80 &
          sleep 5
          curl -I http://localhost:8080
    